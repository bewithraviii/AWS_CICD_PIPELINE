AWSTemplateFormatVersion: '2010-09-09'
Description: Creating EC2 instance with Lambda and Role Stack

Parameters:
  ExistingBucketName:
    Type: String
    default: cicdbucket-3601
    Description: "Name of the pre-created S3 bucket (artifact store) to be used by the pipeline / CFN."

Resources:
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - cloudformation:*
                  - iam:PassRole
                  - lambda:*
                  - ec2:*
                  - logs:CreateLogGroup # For Logging cloudformation.
                  - logs:CreateLogStream # For Logging cloudformation.
                  - logs:PutLogEvents # For Logging cloudformation.
                  - codestar-connections:UseConnection
                Resource: '*'
  
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - cloudformation:*
                  - lambda:*
                  - ec2:*
                  - logs:*
                Resource: '*'

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
  
  CiCdLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs20.x
      Code:
        S3Bucket: !Ref ExistingBucketName
        S3Key: LambdaFunction.zip
      Timeout: 10

  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t3.micro
      ImageId: ami-00ca32bbc84273381
      KeyName: raj-key-us
      SecurityGroups:
        - !Ref CiCdPipelineSG
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "Welcome to the Static Frontend on EC2!" > /var/www/html/index.html

  CiCdPipelineSG: 
    Type: AWS::EC2::SecurityGroup 
    Properties: 
      GroupDescription: Enable HTTP access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          